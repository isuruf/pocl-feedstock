commit a763506c5ff747e59647bb6560d11f0556fda399
Author: Isuru Fernando <isuruf@gmail.com>
Date:   Tue Apr 2 13:58:20 2019 -0500

    Enable pocl relocation

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5d81a016..17e07acc 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -276,6 +276,9 @@ endif()
 # for kernel-<target>.bc
 set(POCL_INSTALL_PRIVATE_DATADIR "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/pocl" CACHE PATH "POCL private datadir")
 
+option(ENABLE_POCL_RELOCATION NO "Enable pocl relocation when compiled by changing internal paths to relative paths")
+file(RELATIVE_PATH POCL_INSTALL_PRIVATE_DATADIR_REL ${POCL_INSTALL_PUBLIC_LIBDIR} ${POCL_INSTALL_PRIVATE_DATADIR})
+
 # for poclu.h
 set(POCL_INSTALL_PUBLIC_HEADER_DIR "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}" CACHE PATH "POCL public header dir")
 
@@ -1334,6 +1337,13 @@ if(UNIX)
 
 endif()
 
+##########################################################
+
+if(ENABLE_POCL_RELOCATION)
+  install(FILES "${CLANG_RESOURCE_DIR}/include/opencl-c.h"
+         DESTINATION "${POCL_INSTALL_PRIVATE_DATADIR}/include")
+endif()
+
 #############################################################
 
 add_subdirectory("include")
diff --git a/config.h.in.cmake b/config.h.in.cmake
index 84d94968..27e6b9e2 100644
--- a/config.h.in.cmake
+++ b/config.h.in.cmake
@@ -29,6 +29,8 @@
 
 #cmakedefine ENABLE_POCL_BUILDING
 
+#cmakedefine ENABLE_POCL_RELOCATION
+
 #cmakedefine ENABLE_POCL_FLOAT_CONVERSION
 
 #cmakedefine ENABLE_SLEEF
@@ -161,6 +163,8 @@
 
 #define POCL_INSTALL_PRIVATE_DATADIR "@POCL_INSTALL_PRIVATE_DATADIR@"
 
+#define POCL_INSTALL_PRIVATE_DATADIR_REL "@POCL_INSTALL_PRIVATE_DATADIR_REL@"
+
 #cmakedefine POCL_USE_FAKE_ADDR_SPACE_IDS
 
 #cmakedefine POCL_ASSERTS_BUILD
diff --git a/lib/CL/pocl_llvm_build.cc b/lib/CL/pocl_llvm_build.cc
index f0b897f4..5e2a1c1b 100644
--- a/lib/CL/pocl_llvm_build.cc
+++ b/lib/CL/pocl_llvm_build.cc
@@ -68,6 +68,15 @@ IGNORE_COMPILER_WARNING("-Wstrict-aliasing")
 #include "pocl_cache.h"
 #include "LLVMUtils.h"
 
+#if defined(ENABLE_POCL_RELOCATION)
+#if defined(__linux__)
+#include <dlfcn.h>
+#elif defined(__APPLE__)
+#define _DARWIN_C_SOURCE
+#include <dlfcn.h>
+#endif
+#endif
+
 using namespace clang;
 using namespace llvm;
 
@@ -172,6 +181,23 @@ static void get_build_log(cl_program program,
 
 static llvm::Module *getKernelLibrary(cl_device_id device);
 
+static std::string get_pocl_private_data_dir() {
+#if defined(ENABLE_POCL_RELOCATION) && (defined(__APPLE__) || defined(__linux__))
+    Dl_info info;
+    if (dladdr((void*)get_pocl_private_data_dir, &info)) {
+        char const * soname = info.dli_fname;
+        std::string result = std::string(soname);
+        size_t last_slash = result.rfind('/');
+        result = result.substr(0, last_slash+1);
+        if (result.size() > 0) {
+            result += POCL_INSTALL_PRIVATE_DATADIR_REL;
+            return result;
+        }
+    }
+#endif
+    return POCL_INSTALL_PRIVATE_DATADIR;
+}
+
 int pocl_llvm_build_program(cl_program program,
                             unsigned device_i,
                             const char *user_options_cstr,
@@ -420,15 +446,18 @@ int pocl_llvm_build_program(cl_program program,
   std::string KernelH;
   std::string BuiltinRenamesH;
   std::string PoclTypesH;
+  std::string ClangResourceDir;
 
 #ifdef ENABLE_POCL_BUILDING
   if (pocl_get_bool_option("POCL_BUILDING", 0)) {
     IncludeRoot = SRCDIR;
+    ClangResourceDir = CLANG_RESOURCE_DIR;
 #else
   if (0) {
 #endif
   } else {
-    IncludeRoot = POCL_INSTALL_PRIVATE_DATADIR;
+    IncludeRoot = get_pocl_private_data_dir();
+    ClangResourceDir = IncludeRoot;
   }
   KernelH = IncludeRoot + "/include/_kernel.h";
   BuiltinRenamesH = IncludeRoot + "/include/_builtin_renames.h";
@@ -438,7 +467,7 @@ int pocl_llvm_build_program(cl_program program,
   po.Includes.push_back(BuiltinRenamesH);
 #ifndef LLVM_OLDER_THAN_4_0
   // Use Clang's opencl-c.h header.
-  po.Includes.push_back(CLANG_RESOURCE_DIR "/include/opencl-c.h");
+  po.Includes.push_back(ClangResourceDir + "/include/opencl-c.h");
 #endif
   po.Includes.push_back(KernelH);
   clang::TargetOptions &ta = pocl_build.getTargetOpts();
@@ -837,7 +866,7 @@ static llvm::Module* getKernelLibrary(cl_device_id device)
     kernellib += subdir;
   } else // POCL_BUILDING == 0, use install dir
 #endif
-  kernellib = POCL_INSTALL_PRIVATE_DATADIR;
+  kernellib = get_pocl_private_data_dir();
   kernellib += "/kernel-";
   kernellib += device->llvm_target_triplet;
   if (is_host) {
